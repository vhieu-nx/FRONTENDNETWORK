{"ast":null,"code":"import _objectSpread from \"D:\\\\SocialNetWork\\\\Social-Network\\\\SocialNetwork\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar BASE_URL = 'http://localhost:8000';\n\nvar getAuthHeader = function getAuthHeader() {\n  var token = localStorage.getItem(\"token\");\n  return token && token.length ? {\n    'Authorization': \"Bearer \".concat(token)\n  } : {};\n};\n\nexport default {\n  get: function get(endpoint, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'GET',\n      headers: _objectSpread({\n        Accept: 'application/json'\n      }, getAuthHeader())\n    }).then(checkStatus) // .then(data => data.json())\n    .then(callback);\n  },\n  post: function post(endpoint, data, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'POST',\n      headers: _objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }, getAuthHeader()),\n      body: JSON.stringify(data)\n    }).then(checkStatus) // .then(res => res.json())\n    .then(callback);\n  },\n  put: function put(endpoint, data, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'PUT',\n      headers: _objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }, getAuthHeader()),\n      body: JSON.stringify(data)\n    }).then(checkStatus).then(callback);\n  },\n  delete: function _delete(endpoint, data, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'DELETE',\n      headers: _objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }, getAuthHeader()),\n      body: JSON.stringify(data)\n    }).then(checkStatus).then(callback);\n  },\n  update: function update(data) {\n    return fetch(BASE_URL + '/users/update', {\n      method: 'put',\n      body: JSON.stringify(data),\n      headers: _objectSpread({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }, getAuthHeader())\n    }).then(checkStatus).then(function () {\n      return console.log('updated!!!');\n    }); // .catch(err => {\n    //     console.log(err)\n    // })\n  },\n  addPhoto: function addPhoto(endpoint, data, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'POST',\n      headers: _objectSpread({}, getAuthHeader()),\n      body: data\n    }).then(checkStatus).then(callback);\n  }\n};\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response.json();\n  } else {\n    var error = new Error(response.statusText);\n\n    if (response.status === 403 && response.url === BASE_URL + '/login') {\n      error.message = 'Incorrect credentials!';\n      error.response = response;\n      throw error;\n    } else if (response.status === 403 && response.type === 'cors') {\n      console.log('err response: ', response);\n      error.message = 'Your JWT token is expired. Please log in!';\n      error.status = 403;\n      error.type = 'cors';\n      throw error;\n    } else if (response.status === 400) {\n      console.log('err response: ', response);\n      error.message = 'Error: Bad request'; // error.message = response.message\n\n      error.status = 400;\n      error.type = 'cors';\n      throw error;\n    } // else if (response.status === 500) {\n    //     console.log('err response: ', response)\n    //     error.message = 'Something went wrong'\n    //     error.status = 403;\n    //     error.type = 'cors'\n    //     throw error;\n    // }\n    else {\n        return response.json();\n      }\n  }\n}","map":{"version":3,"sources":["D:\\SocialNetWork\\Social-Network\\SocialNetwork\\Client\\src\\infrastructure\\requester.js"],"names":["BASE_URL","getAuthHeader","token","localStorage","getItem","length","get","endpoint","callback","fetch","method","headers","Accept","then","checkStatus","post","data","body","JSON","stringify","put","delete","update","console","log","addPhoto","response","status","json","error","Error","statusText","url","message","type"],"mappings":"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","sourcesContent":["const BASE_URL = 'http://localhost:8000';\r\n\r\nconst getAuthHeader = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    return (token && token.length)\r\n        ? { 'Authorization': `Bearer ${token}` }\r\n        : {}\r\n}\r\n\r\nexport default {\r\n    get: (endpoint, callback) => {\r\n        return fetch(BASE_URL + endpoint, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                ...getAuthHeader(),\r\n            },\r\n        }).then(checkStatus)\r\n            // .then(data => data.json())\r\n            .then(callback);\r\n    },\r\n\r\n    post: (endpoint, data, callback) => {\r\n        return fetch(BASE_URL + endpoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                ...getAuthHeader(),\r\n            },\r\n\r\n            body: JSON.stringify(data)\r\n        }).then(checkStatus)\r\n            // .then(res => res.json())\r\n            .then(callback);\r\n    },\r\n\r\n    put: (endpoint, data, callback) => {\r\n        return fetch(BASE_URL + endpoint, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                ...getAuthHeader(),\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(checkStatus)\r\n            .then(callback);\r\n    },\r\n\r\n    delete: (endpoint, data, callback) => {\r\n        return fetch(BASE_URL + endpoint, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                ...getAuthHeader(),\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(checkStatus)\r\n            .then(callback)\r\n    },\r\n\r\n    update: (data) => {\r\n        return fetch(BASE_URL + '/users/update', {\r\n            method: 'put',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                ...getAuthHeader(),\r\n            }\r\n        }).then(checkStatus)\r\n            .then(() => console.log('updated!!!'))\r\n        // .catch(err => {\r\n        //     console.log(err)\r\n        // })\r\n\r\n    },\r\n\r\n    addPhoto: (endpoint, data, callback) => {\r\n        return fetch(BASE_URL + endpoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                ...getAuthHeader()\r\n            },\r\n            body: data\r\n        }).then(checkStatus)\r\n            .then(callback)\r\n    }\r\n}\r\n\r\nfunction checkStatus(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response.json()\r\n    } else {\r\n        var error = new Error(response.statusText);\r\n        if (response.status === 403 && response.url === (BASE_URL + '/login')) {\r\n            error.message = 'Incorrect credentials!';\r\n            error.response = response;\r\n            throw error;\r\n        } else if (response.status === 403 && response.type === 'cors') {\r\n            console.log('err response: ', response)\r\n            error.message = 'Your JWT token is expired. Please log in!'\r\n            error.status = 403;\r\n            error.type = 'cors'\r\n            throw error;\r\n        } else if (response.status === 400) {\r\n            console.log('err response: ', response)\r\n            error.message = 'Error: Bad request'\r\n            // error.message = response.message\r\n            error.status = 400;\r\n            error.type = 'cors'\r\n            throw error;\r\n        }\r\n        // else if (response.status === 500) {\r\n        //     console.log('err response: ', response)\r\n        //     error.message = 'Something went wrong'\r\n        //     error.status = 403;\r\n        //     error.type = 'cors'\r\n        //     throw error;\r\n        // }\r\n        else {\r\n            return response.json();\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}