{"ast":null,"code":"import { REMOVE_COMMENT_BEGIN, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_ERROR, ADDLIKE_COMMENT_SUCCESS, ADDLIKE_COMMENT_BEGIN, ADDLIKE_COMMENT_ERROR, CREATE_COMMENT_SUCCESS, CREATE_COMMENT_BEGIN, CREATE_COMMENT_ERROR } from '../actions/actionTypes'; // createCommentReducer\n\nvar initialStateCreateComment = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nvar createCommentReducer = function createCommentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateCreateComment;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CREATE_COMMENT_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case CREATE_COMMENT_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case CREATE_COMMENT_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}; // removeCommentReducer\n\n\nvar initialStateRemoveComment = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nvar removeCommentReducer = function removeCommentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateRemoveComment;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REMOVE_COMMENT_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case REMOVE_COMMENT_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case REMOVE_COMMENT_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}; // addLikeCommentReducer\n\n\nvar initialStateAddLikeComment = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nvar addLikeCommentReducer = function addLikeCommentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAddLikeComment;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADDLIKE_COMMENT_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case ADDLIKE_COMMENT_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case ADDLIKE_COMMENT_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { createCommentReducer, removeCommentReducer, addLikeCommentReducer };","map":{"version":3,"sources":["D:\\SocialNetWork\\Social-Network\\SocialNetwork\\Client\\src\\store\\reducers\\commentReducer.js"],"names":["REMOVE_COMMENT_BEGIN","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_ERROR","ADDLIKE_COMMENT_SUCCESS","ADDLIKE_COMMENT_BEGIN","ADDLIKE_COMMENT_ERROR","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_BEGIN","CREATE_COMMENT_ERROR","initialStateCreateComment","hasError","error","message","status","path","loading","createCommentReducer","state","action","type","Object","assign","payload","initialStateRemoveComment","removeCommentReducer","initialStateAddLikeComment","addLikeCommentReducer"],"mappings":"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","sourcesContent":["import {\r\n    REMOVE_COMMENT_BEGIN, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_ERROR,\r\n    ADDLIKE_COMMENT_SUCCESS, ADDLIKE_COMMENT_BEGIN, ADDLIKE_COMMENT_ERROR,\r\n    CREATE_COMMENT_SUCCESS, CREATE_COMMENT_BEGIN, CREATE_COMMENT_ERROR,\r\n} from '../actions/actionTypes';\r\n\r\n\r\n// createCommentReducer\r\nconst initialStateCreateComment = {\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nconst createCommentReducer = (state = initialStateCreateComment, action) => {\r\n    switch (action.type) {\r\n        case CREATE_COMMENT_BEGIN:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case CREATE_COMMENT_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case CREATE_COMMENT_ERROR:\r\n            return Object.assign({}, state, {\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// removeCommentReducer\r\nconst initialStateRemoveComment = {\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nconst removeCommentReducer = (state = initialStateRemoveComment, action) => {\r\n    switch (action.type) {\r\n        case REMOVE_COMMENT_BEGIN:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case REMOVE_COMMENT_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case REMOVE_COMMENT_ERROR:\r\n            return Object.assign({}, state, {\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// addLikeCommentReducer\r\nconst initialStateAddLikeComment = {\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nconst addLikeCommentReducer = (state = initialStateAddLikeComment, action) => {\r\n    switch (action.type) {\r\n        case ADDLIKE_COMMENT_BEGIN:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case ADDLIKE_COMMENT_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case ADDLIKE_COMMENT_ERROR:\r\n            return Object.assign({}, state, {\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { createCommentReducer, removeCommentReducer, addLikeCommentReducer }"]},"metadata":{},"sourceType":"module"}